basePath: /api/v1
definitions:
  command.CreateRequest:
    properties:
      group:
        maxLength: 255
        type: string
      song:
        maxLength: 255
        type: string
    required:
    - group
    - song
    type: object
  command.UpdateRequest:
    properties:
      group:
        maxLength: 255
        type: string
      link:
        maxLength: 255
        type: string
      release_date:
        maxLength: 10
        type: string
      song:
        maxLength: 255
        type: string
      text:
        type: string
    required:
    - group
    - song
    type: object
  song.Song:
    properties:
      group:
        type: string
      id:
        type: string
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: mishavkrpv@gmail.com
  description: Effective Mobile test task
  title: Musiclib API
  version: "1.0"
paths:
  /songs:
    get:
      description: get all songs matching filters from the library
      parameters:
      - description: search by group
        in: query
        maxLength: 255
        name: group
        type: string
      - description: search by song
        in: query
        maxLength: 255
        name: song
        type: string
      - description: search by date
        in: query
        maxLength: 10
        name: date
        type: string
      - description: search by text
        in: query
        name: text
        type: string
      - description: search by link
        in: query
        maxLength: 255
        name: link
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: songs per page
        in: query
        maximum: 150
        minimum: 3
        name: songs
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/song.Song'
            type: array
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Songs
      tags:
      - query
    post:
      consumes:
      - application/json
      description: create song
      parameters:
      - description: song to create
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/command.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/song.Song'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: CreateSong
      tags:
      - command
  /songs/{song_id}:
    delete:
      description: delete song
      parameters:
      - description: Song ID
        in: path
        maxLength: 255
        name: song_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: DeleteSong
      tags:
      - command
    put:
      consumes:
      - application/json
      description: update song
      parameters:
      - description: Song ID
        in: path
        maxLength: 255
        name: song_id
        required: true
        type: string
      - description: song to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/command.UpdateRequest'
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: UpdateSong
      tags:
      - command
  /songs/{song_id}/lyrics:
    get:
      description: get song's lyrics with pagination by verses
      parameters:
      - description: Song ID
        in: path
        maxLength: 255
        name: song_id
        required: true
        type: string
      - description: verse number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: verse
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Lyrics
      tags:
      - query
swagger: "2.0"
